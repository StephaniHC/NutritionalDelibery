// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NutritionalDelibery.Infrastructure.StoredModel;

#nullable disable

namespace NutritionalDelibery.Infrastructure.Migrations
{
    [DbContext(typeof(StoredDbContext))]
    [Migration("20250629165254_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NutritionalDelibery.Infrastructure.StoredModel.Entities.DeliveryNoteStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeliveryDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Description");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("ImagePath");

                    b.Property<Guid>("PacientId")
                        .HasColumnType("uuid")
                        .HasColumnName("PacientId");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("State");

                    b.HasKey("Id");

                    b.ToTable("DeliveryNote");
                });

            modelBuilder.Entity("NutritionalDelibery.Infrastructure.StoredModel.Entities.DeliveryRouteStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<double>("LatitudeDestination")
                        .HasColumnType("double precision")
                        .HasColumnName("LatitudeDestination");

                    b.Property<double>("LatitudeOrigin")
                        .HasColumnType("double precision")
                        .HasColumnName("LatitudeOrigin");

                    b.Property<double>("LongitudeDestination")
                        .HasColumnType("double precision")
                        .HasColumnName("LongitudeDestination");

                    b.Property<double>("LongitudeOrigin")
                        .HasColumnType("double precision")
                        .HasColumnName("LongitudeOrigin");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("DeliveryRoute");
                });

            modelBuilder.Entity("NutritionalDelibery.Infrastructure.StoredModel.Entities.ExitNoteDetailStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("ExitNoteId")
                        .HasColumnType("uuid")
                        .HasColumnName("ExitNoteId");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uuid")
                        .HasColumnName("PackageId");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("Quantity");

                    b.HasKey("Id");

                    b.ToTable("ExitNoteDetail");
                });

            modelBuilder.Entity("NutritionalDelibery.Infrastructure.StoredModel.Entities.ExitNoteStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("DeliveryPersonId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeliveryPersonId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("ExitDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ExitDate");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("Number");

                    b.HasKey("Id");

                    b.ToTable("ExitNote");
                });
#pragma warning restore 612, 618
        }
    }
}
